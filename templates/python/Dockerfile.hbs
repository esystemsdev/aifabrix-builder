# Python Dockerfile Template
# Generated by AI Fabrix Builder SDK
# Base image: Python 3.11 Alpine for optimal size and security

FROM python:3.11-alpine

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    dumb-init \
    curl \
    gcc \
    musl-dev \
    libffi-dev \
    && rm -rf /var/cache/apk/*

# Copy requirements first for better layer caching
COPY requirements*.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Create non-root user for security
RUN addgroup -g 1001 -S python && \
    adduser -S python -u 1001

# Change ownership of app directory
RUN chown -R python:python /app
USER python

# Expose application port
# Template variable: {{port}} will be replaced with actual port number
EXPOSE {{port}}

# Health check
# Template variables: {{healthCheck.interval}} and {{healthCheck.path}} will be replaced
HEALTHCHECK --interval={{healthCheck.interval}}s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:{{port}}{{healthCheck.path}} || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start application
CMD {{#if startupCommand}}["{{startupCommand}}"]{{else}}["python", "main.py"]{{/if}}
