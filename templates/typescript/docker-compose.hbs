# TypeScript/Node.js Docker Compose Template
# Generated by AI Fabrix Builder SDK
# Service definition for local development

version: "3.9"

services:
  {{app.key}}:
    image: {{image.name}}:{{image.tag}}
    container_name: aifabrix-{{app.key}}
    env_file: .env
    ports:
      - "{{build.localPort}}:{{port}}"
    networks:
      - aifabrix-network
    {{#if requiresStorage}}
    volumes:
      - "{{mountVolume}}:/mnt/data"
    {{/if}}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:{{port}}{{healthCheck.path}}"]
      interval: {{healthCheck.interval}}s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    {{#if requiresDatabase}}
    depends_on:
      db-init:
        condition: service_completed_successfully
    {{/if}}

  {{#if requiresDatabase}}
  # Database Initialization
  db-init:
    image: pgvector/pgvector:pg15
    container_name: aifabrix-{{app.key}}-db-init
    env_file:
      - ${ADMIN_SECRETS_PATH}
    environment:
      POSTGRES_DB: postgres
    networks:
      - aifabrix-network
    command: >
      sh -c "
        echo 'Creating {{app.key}} database and user...' &&
        psql -d postgres -c 'CREATE DATABASE {{app.key}};' || echo '{{app.key}} database exists' &&
        psql -d postgres -c \"CREATE USER {{app.key}}_user WITH PASSWORD '{{app.key}}_pass123';\" || echo '{{app.key}}_user exists' &&
        psql -d postgres -c 'GRANT ALL PRIVILEGES ON DATABASE {{app.key}} TO {{app.key}}_user;' &&
        psql -d {{app.key}} -c 'ALTER SCHEMA public OWNER TO {{app.key}}_user;' &&
        psql -d {{app.key}} -c 'GRANT ALL ON SCHEMA public TO {{app.key}}_user;' &&
        {{#each databases}}
        {{#unless @first}}
        echo 'Creating {{name}} database and user...' &&
        psql -d postgres -c 'CREATE DATABASE {{name}};' || echo '{{name}} database exists' &&
        psql -d postgres -c \"CREATE USER {{name}}_user WITH PASSWORD '{{name}}_pass123';\" || echo '{{name}}_user exists' &&
        psql -d postgres -c 'GRANT ALL PRIVILEGES ON DATABASE {{name}} TO {{name}}_user;' &&
        psql -d {{name}} -c 'ALTER SCHEMA public OWNER TO {{name}}_user;' &&
        psql -d {{name}} -c 'GRANT ALL ON SCHEMA public TO {{name}}_user;' &&
        {{/unless}}
        {{/each}}
        echo 'Database initialization complete!'
      "
    restart: "no"
  {{/if}}

networks:
  aifabrix-network:
    external: true
