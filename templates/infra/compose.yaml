# AI Fabrix Infrastructure Stack
# Shared infrastructure services only
# Generated by AI Fabrix Builder SDK

version: "3.9"

services:
  # PostgreSQL Database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg15
    container_name: aifabrix-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: pgadmin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - aifabrix-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pgadmin -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aifabrix-redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aifabrix-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: aifabrix-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aifabrix-network

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: aifabrix-redis-commander
    environment:
      REDIS_HOSTS: ${REDIS_HOST}
      HTTP_USER: ${REDIS_COMMANDER_USER}
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD}
      REDIS_PASSWORD: ""
    ports:
      - "8081:8081"
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - aifabrix-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  aifabrix-network:
    driver: bridge
    name: aifabrix-network
